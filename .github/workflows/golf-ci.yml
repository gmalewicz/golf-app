# This workflow will build a Java project with Maven
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven

name: Java GOLF CI with Maven

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

env:
  VERSION_EXP: git describe --tags --always --first-parent --dirty  
  PKG_NAME: docker.pkg.github.com/gmalewicz/golf/golf-app
jobs:
  build:

    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v2
      
    - name: Set up JDK 1.13
      uses: actions/setup-java@v1
      with:
        java-version: 1.13
        
    - name: Create log directory
      run: |
        sudo mkdir /home/grzegorz_malewicz
        sudo mkdir /home/grzegorz_malewicz/logs
        
    - name: Cache local Maven repository
      uses: actions/cache@v2
      with:
        path: ~/.m2/repository
        key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
        restore-keys: |
          ${{ runner.os }}-maven-

    - name: Build with Maven
      run: mvn -B package --file ./pom.xml 
    
      env:
          # Google test reCaptcha credentials
          google_recaptcha_key_site: 6LeIxAcTAAAAAJcZVRqyHh71UMIEGNQ_MXjiZKhI
          google_recaptcha_key_secret: ${{secrets.GOOGLE_RECAPTCHA_KEY_SECRET}}
    
    - name: Set up version
      run: echo "VERSION=$($VERSION_EXP)" >> $GITHUB_ENV
    
    - name: Assemble image
      run: docker build -t $PKG_NAME:$VERSION -t $PKG_NAME:latest .
      
    - name: Publish image
      # if: startsWith(github.ref, 'refs/tags/')
      if: always()
      run: |
        echo ${{secrets.GITHUB_TOKEN}} | docker login docker.pkg.github.com --username gmalewicz --password-stdin
        docker push $PKG_NAME:latest
      # docker push $PKG_NAME:$VERSION
    
  analyse:
    
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v2
      
    - name: Set up JDK 1.13
      uses: actions/setup-java@v1
      with:
        java-version: 1.13
        
    - name: Create log directory
      run: |
        sudo mkdir /home/grzegorz_malewicz
        sudo mkdir /home/grzegorz_malewicz/logs
        
    - name: Cache local Maven repository
      uses: actions/cache@v2
      with:
        path: ~/.m2/repository
        key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
        restore-keys: |
          ${{ runner.os }}-maven-
        
    - name: Analyze with SonarCloud
      run: mvn -B compile sonar:sonar 
        -Dsonar.organization=gmalewicz 
        -Dsonar.host.url=https://sonarcloud.io 
        -Dsonar.login=$SONAR_TOKEN 
        -Dsonar.projectName=gmalewicz_golf-app
        -Dsonar.java.source=13
        -Dsonar.sources=src/main/java,src/main/resources/templates
        -Dsonar.java.binaries=target/classes
        -Dsonar.sourceEncoding=UTF-8
        -Dsonar.exclusions=.git/**,.settings/**,target/**
          --file ./pom.xml 
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }} 
        
